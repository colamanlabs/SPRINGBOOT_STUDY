


spring.datasource.hikari.jdbc-url=jdbc:mariadb://127.0.0.1:13306/study
spring.datasource.hikari.username=studyuser
spring.datasource.hikari.password=studyuser
spring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.pool-name=HikariCP TEST POOL



### https://docs.spring.io/spring-boot/docs/2.1.x/reference/html/howto-database-initialization.html
### 86.4 Initialize a Spring Batch Database
### If you use Spring Batch, it comes pre-packaged with SQL initialization scripts for most popular database platforms. Spring Boot can detect your database type and execute those scripts on startup. If you use an embedded database, this happens by default. You can also enable it for any database type, as shown in the following example:
### 
### spring.batch.initialize-schema=always
### You can also switch off the initialization explicitly by setting spring.batch.initialize-schema=never.

### spring.batch.initialize-schema=always 지정했는데, 안만들어진다. 사용하지 말자.
###
### spring.batch.jdbc.initialize-schema=always 로 하면 스키마가 자동으로 만들어진다.
###
spring.batch.jdbc.initialize-schema=always

